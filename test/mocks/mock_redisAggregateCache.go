// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/unit-test-example/cache (interfaces: Sample)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSample is a mock of Sample interface
type MockSample struct {
	ctrl     *gomock.Controller
	recorder *MockSampleMockRecorder
}

// MockSampleMockRecorder is the mock recorder for MockSample
type MockSampleMockRecorder struct {
	mock *MockSample
}

// NewMockSample creates a new mock instance
func NewMockSample(ctrl *gomock.Controller) *MockSample {
	mock := &MockSample{ctrl: ctrl}
	mock.recorder = &MockSampleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSample) EXPECT() *MockSampleMockRecorder {
	return m.recorder
}

// DoSomething mocks base method
func (m *MockSample) DoSomething(arg0 int, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSomething", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoSomething indicates an expected call of DoSomething
func (mr *MockSampleMockRecorder) DoSomething(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomething", reflect.TypeOf((*MockSample)(nil).DoSomething), arg0, arg1)
}
